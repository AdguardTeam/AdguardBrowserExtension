---
version: 2
plan:
  project-key: ADGEXT
  key: BERELEASESPECS
  name: browser extension - build release
variables:
  dockerNode: adguard/extension-builder:22.17--0.2.1--0

stages:
  - Size and locales check:
      manual: false
      final: false
      jobs:
        - Check Bundle Size
        - Check translations
  - Build:
      manual: false
      final: false
      jobs:
        - Build

Check Bundle Size:
  key: SIZECHECK
  other:
    clean-working-dir: true
  docker: &docker
    image: ${bamboo.dockerNode}
    volumes:
      ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - checkout:
        force-clean-build: 'true'
    - script: &setup-script
        interpreter: SHELL
        scripts:
          - |-
            # 'set' should be added to the beginning of each script to ensure that it runs with the correct options.
            #  -e: Exit immediately if any command exits with a non-zero status (i.e., if a command fails).
            #  -x: Print each command to the terminal as it is executed, which is useful for debugging.
            set -ex

            # Fix mixed logs
            exec 2>&1

            ls -la

            # Set cache directory
            pnpm config set store-dir ${bamboo.cachePnpm}
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -ex

            # Install dependencies
            pnpm install ${bamboo.varsPnpm}

            BUILD_TYPE="release"

            echo "Executing build for $BUILD_TYPE"

            # Run build
            pnpm $BUILD_TYPE

            # Create artifacts directory if it doesn't exist
            mkdir -p artifacts

            # NOTE: Firefox standalone build is not needed for artifacts
            # but it is needed for bundle size check
            pnpm release firefox-standalone

            echo "Checking bundle sizes"
            pnpm check-bundle-size release

            # Cleaning up Firefox standalone build after bundle size check
            rm -rf build/release/firefox-standalone
  final-tasks:
    - script: &final-clean-up-script
        interpreter: SHELL
        scripts:
          - |-
            set -ex

            # Fix mixed logs
            exec 2>&1

            ls -la

            echo "Size before cleanup:" && du -h | tail -n 1
            rm -rf node_modules build
            rm -rf .git
            echo "Size after cleanup:" && du -h | tail -n 1
  requirements: &requirements
    - adg-docker: 'true'
    - extension: 'true'

Check translations:
  key: LOCALESCHECK
  other:
    clean-working-dir: true
  docker: *docker
  tasks:
    - checkout:
        force-clean-build: true
    - script: *setup-script
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -ex

            pnpm install ${bamboo.varsPnpm}

            pnpm locales validate --min
  final-tasks:
    - script: *final-clean-up-script
  requirements: *requirements

Build:
  key: BUILD
  other:
    clean-working-dir: true
  docker: *docker
  tasks:
    - checkout:
        force-clean-build: 'true'
    - script: *setup-script
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -ex

            pnpm install ${bamboo.varsPnpm}

            pnpm release

            # zip source files for publishing on AMO
            ./bamboo-specs/scripts/archive-source.sh release

            # TODO: (AG-41656) Remove this workaround and use the browser name
            # as for all other builds
            mv build/release/firefox-amo.zip build/release/firefox.zip

            # Create artifacts directory if it doesn't exist
            mkdir -p artifacts

            # Copy all artifacts to the artifacts directory
            cp build/release/build.txt artifacts/
            cp build/release/chrome.zip artifacts/
            cp build/release/chrome-mv3.zip artifacts/
            cp build/release/firefox.zip artifacts/
            cp build/release/edge.zip artifacts/
            cp build/release/opera.zip artifacts/
            cp build/release/source.zip artifacts/
    - inject-variables:
        file: artifacts/build.txt
        scope: RESULT
        namespace: inject
    - any-task:
        plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.tagging
        configuration:
          selectedRepository: defaultRepository
          tagName: v${bamboo.inject.version}
  final-tasks:
    - script: *final-clean-up-script
  artifacts:
    - name: build.txt
      location: artifacts
      pattern: build.txt
      shared: true
      required: true
    - name: chrome.zip
      location: artifacts
      pattern: chrome.zip
      shared: true
      required: true
    - name: chrome-mv3.zip
      location: artifacts
      pattern: chrome-mv3.zip
      shared: true
      required: true
    - name: firefox.zip
      location: artifacts
      pattern: firefox.zip
      shared: true
      required: true
    - name: edge.zip
      location: artifacts
      pattern: edge.zip
      shared: true
      required: true
    - name: opera.zip
      location: artifacts
      pattern: opera.zip
      shared: true
      required: true
    - name: source.zip
      location: artifacts
      pattern: source.zip
      shared: true
      required: true
  requirements: *requirements

triggers: []

branches:
  create: manually
  delete: never
  link-to-jira: 'true'

notifications:
  - events:
      - plan-status-changed
    recipients:
      - webhook:
          name: Build webhook
          url: http://prod.jirahub.service.eu.consul/v1/webhook/bamboo
labels: []
other:
  concurrent-build-plugin: system-default
