---
version: 2
plan:
  project-key: ADGEXT
  key: AUTOBUILD
  name: browser extension - auto-build
variables:
  # Playwright is needed for integration tests after build.
  dockerPlaywright: adguard/playwright-runner:22.14--1.51.1--0
  # Node.js is needed for build and tests.
  dockerNode: adguard/extension-builder:22.14--0.2--0
  # Stable branch name for auto-update only filters.
  stableBranchName: stable/v5.1

# Since auto-build is being run only for a stable branch now (specified in
# `bamboo.stableBranchName`) we should skip the build stage for other branches.
stages:
  - DoNothing: &any-stage
      manual: false
      final: false
      jobs:
        - DoNothing

DoNothing:
  key: NOTHING
  other: &other
    clean-working-dir: true
  docker: &dockerNode
    image: ${bamboo.dockerNode}
    volumes:
      ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - checkout: &checkout
        force-clean-build: true
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -e
            set -x

            BRANCH="${bamboo.planRepository.branchName}"

            echo "Build and deployment is not supported on branch ${BRANCH}, skipping"
  # Since the artifact is being published from a non-master branch, it should
  # still be available in the master branch.
  artifacts: &artifacts
    - name: chrome-mv3-beta.zip
      location: artifacts
      pattern: chrome-mv3-beta.zip
      shared: true
      required: true
    - name: chrome-mv3-release.zip
      location: artifacts
      pattern: chrome-mv3-release.zip
      shared: true
      required: true
  requirements: &requirements
    - adg-docker: 'true'
    - extension: 'true'

branches:
  create: manually
  delete: never
  link-to-jira: true

notifications:
  - recipients:
      - webhook:
          name: Build webhook
          url: http://prod.jirahub.service.eu.consul/v1/webhook/bamboo
    events:
      - plan-status-changed

labels: []
other:
  concurrent-build-plugin: system-default

# Run plan only for 'stable/test' branch.
# Override is needed to skip the build stage for other branches,
# because even if branches are not supposed to be run for PRs (due to 'create: manually' above),
# build was triggered by 'cron' anyway.
branch-overrides:
  -
    # Note: it should be equal with `bamboo.stableBranchName`
    stable/v5.1:
      stages:
        - Tests:
            <<: *any-stage
            jobs:
              - Lint
              - Unit tests
              - Locales check
        - Update filters and build:
            <<: *any-stage
            jobs:
              - Full filters update and build
              - Skip-review filters update and build
        - Integration tests:
            <<: *any-stage
            jobs:
              - Integration tests

      Lint:
        key: LINT
        other: *other
        docker: *dockerNode
        tasks:
          - checkout: *checkout
          - script:
              interpreter: SHELL
              scripts:
                - |-
                  set -x
                  set -e
                  ls -la

                  # Fix mixed logs.
                  exec 2>&1

                  # Set cache directory
                  pnpm config set store-dir ${bamboo.cachePnpm}

                  pnpm install ${bamboo.varsPnpm}

                  ./bamboo-specs/scripts/timeout-wrapper.sh 120s pnpm lint
        final-tasks:
          - script: &script-cleanup
              interpreter: SHELL
              scripts:
                - ./bamboo-specs/scripts/cleanup.sh
        requirements: *requirements

      Unit tests:
        key: UNITTESTS
        other: *other
        docker: *dockerNode
        tasks:
          - checkout: *checkout
          - script:
              interpreter: SHELL
              scripts:
                - |-
                  set -x
                  set -e
                  ls -la

                  # Fix mixed logs.
                  exec 2>&1

                  # Set cache directory
                  pnpm config set store-dir ${bamboo.cachePnpm}

                  pnpm install ${bamboo.varsPnpm}

                  ./bamboo-specs/scripts/timeout-wrapper.sh 300s pnpm test:ci
        final-tasks:
          - test-parser:
              type: junit
              # mv3 postfix because we run auto-builds only for mv3 branch.
              test-results: 'tests-reports/unit-tests-mv3.xml'
          - script: *script-cleanup
        requirements: *requirements

      Locales check:
        key: LOCALESCHECK
        other: *other
        docker: *dockerNode
        tasks:
          - checkout: *checkout
          - script:
              interpreter: SHELL
              scripts:
                - |-
                  set -x
                  set -e
                  ls -la

                  # Fix mixed logs.
                  exec 2>&1

                  # Set cache directory
                  pnpm config set store-dir ${bamboo.cachePnpm}

                  pnpm install ${bamboo.varsPnpm}

                  pnpm locales validate --min
        final-tasks:
          - script: *script-cleanup
        requirements: *requirements

      Skip-review filters update and build:
        key: SKIPREVIEWUPDATEANDBUILD
        other: *other
        docker: *dockerNode
        tasks:
          - checkout: *checkout
          - script: &script-init-update
              interpreter: SHELL
              scripts:
                - |-
                  set -x
                  set -e

                  # Fix mixed logs
                  exec 2>&1
                  ls -la

                  # Validate that current branch is valid for build.
                  if [ "${bamboo.planRepository.branchName}" != "${bamboo.stableBranchName}" ]; then
                      # Throw error if current branch is not ${bamboo.stableBranchName},
                      # because we do not deploy new releases not from release branch.
                      echo "auto-build is not supported on branch ${bamboo.stableBranchName}"
                      exit 1;
                  fi

                  # Set cache directory
                  pnpm config set store-dir ${bamboo.cachePnpm}

                  pnpm install ${bamboo.varsPnpm}

                  # Update patch version because resources was changed.
                  pnpm increment

                  # Install the latest dnr-rulesets version
                  OPENAI_API_KEY=${bamboo.openAiExtensionBuildTokenPassword} pnpm resources:mv3
          - script:
              interpreter: SHELL
              scripts:
                - |-
                  # FIXME (Slava): check the script

                  # Determine if we should run skip-review update
                  DAY=$(date +%u)
                  HOUR=$(date -u +%H)

                  # Only run MON-FRI between 6:00-19:00 UTC (9:00-22:00 UTC+3)
                  # Except Friday when we run Full update at 19:00 UTC
                  # (Monday=1, Friday=5)
                  if [[ $DAY -ge 1 && $DAY -le 5 && !($DAY -eq 5 && $HOUR -eq 19) ]]; then
                    echo "Running skip-review update..."

                    # Run the ruleset update script
                    npx ts-node tools/ruleset-updates.ts
                  else
                    echo "Skipping skip-review update"
                    exit 0
                  fi
          - script: &script-build
              interpreter: SHELL
              scripts:
                - |-
                  # Create artifacts directory if it doesn't exist.
                  mkdir -p artifacts

                  # Build release and beta versions of the extension.
                  pnpm beta chrome-mv3
                  pnpm release chrome-mv3

                  # Move zip artifacts to the artifacts directory, because we will
                  # publish zip versions of the extension.
                  mv build/beta/chrome-mv3.zip artifacts/chrome-mv3-beta.zip
                  mv build/release/chrome-mv3.zip artifacts/chrome-mv3-release.zip
          - inject-variables: &inject-variables
              # Doesn't matter which channel we use, because version is the same
              # for both channels.
              file: build/release/build.txt
              scope: RESULT
              namespace: inject
          - any-task:
              plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.commit
              configuration:
                selectedRepository: defaultRepository
                commitMessage: 'skipci: Skip-review filters update & increment patch version'
          - any-task:
              plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.tagging
              configuration:
                selectedRepository: defaultRepository
                tagName: autobuild-skip-review-v${bamboo.inject.version}
        final-tasks:
          - script: *script-cleanup
        artifacts: *artifacts
        requirements: *requirements

      Full filters update and build:
        key: FULLUPDATEANDBUILD
        other: *other
        docker: *dockerNode
        # Run Friday full update at 22:00 UTC+3
        tasks:
          - checkout: *checkout
          - script: *script-init-update
          - script:
              interpreter: SHELL
              scripts:
                - |-
                  # FIXME (Slava): check the script

                  # Determine day of week to confirm Friday update
                  DAY=$(date +%u)
                  HOUR=$(date -u +%H)

                  # Friday is day 5, after 19:00 UTC (or 22:00 UTC+3)
                  if [[ $DAY -eq 5 ]] && [[ $HOUR -ge 19 ]]; then
                    echo "Running Full update..."
                    # Set cache directory
                    pnpm config set store-dir ${bamboo.cachePnpm}

                    # Install dependencies
                    pnpm install ${bamboo.varsPnpm}

                    # FIXME (Slava): consider doing it via js (tools/ script)
                    # Extract extension version from package.json and save to text file
                    EXTENSION_VERSION=$(node -e "console.log(require('./package.json').version)")
                    echo "$EXTENSION_VERSION" > Extension/filters/extension-version.txt

                    # Run the ruleset update script
                    npx ts-node tools/ruleset-updates.ts --full
                  else
                    echo "Skipping full update"
                    exit 0
                  fi
          - script: *script-build
          - inject-variables: *inject-variables
          - any-task:
              plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.commit
              configuration:
                selectedRepository: defaultRepository
                commitMessage: 'skipci: Full filters update & increment patch version'
          - any-task:
              plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.tagging
              configuration:
                selectedRepository: defaultRepository
                tagName: autobuild-full-update-v${bamboo.inject.version}
        final-tasks:
          - script: *script-cleanup
        artifacts: *artifacts
        requirements: *requirements

      Integration tests:
        key: INTEGRATIONTESTS
        other: *other
        docker:
          <<: *dockerNode
          image: ${bamboo.dockerPlaywright}
        tasks:
          - artifact-download:
              artifacts:
                - name: chrome-mv3-release.zip
          - artifact-download:
              artifacts:
                - name: chrome-mv3-beta.zip
          - script:
              interpreter: SHELL
              scripts:
                - |-
                  # Call the common script for both release and beta.
                  ./bamboo-specs/scripts/timeout-wrapper.sh 300s bash ./bamboo-specs/scripts/integration-tests.sh release
                  ./bamboo-specs/scripts/timeout-wrapper.sh 300s bash ./bamboo-specs/scripts/integration-tests.sh beta
        final-tasks:
          - test-parser:
              type: junit
              test-results: 'tests-reports/integration-tests-*.xml'
          - script: *script-cleanup
        requirements: *requirements

      # Skip-review update: once per hour during work hours 9:00-22:00 UTC+3 on weekdays except Friday.
      # Full update: once per week — at 22:00 UTC+3 on Friday.
      # But what to do exactly and when is defined inside the scripts.
      # https://confluence.atlassian.com/bamboo/constructing-a-cron-expression-in-bamboo-289277372.html
      triggers:
        - cron:
            expression: 0 0 9-22 ? * MON-FRI
