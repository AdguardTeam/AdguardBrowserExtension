---
version: 2
plan:
  project-key: ADGEXT
  key: AUTOBUILD
  name: browser extension - auto-build
variables:
  # Playwright is needed for integration tests after build.
  dockerPlaywright: adguard/playwright-runner:22.14--1.51.1--0
  # Node.js is needed for build and tests.
  dockerNode: adguard/extension-builder:22.17--0.2--0
  # Stable branch name for auto-update only filters.
  stableBranchName: stable/v5.2

# Since auto-build is being run only for a stable branch now (specified in
# `bamboo.stableBranchName`) we should skip the build stage for other branches.
stages:
  - DoNothing:
      manual: false
      final: false
      jobs:
        - DoNothing

DoNothing:
  key: NOTHING
  other:
    clean-working-dir: true
  docker:
    image: ${bamboo.dockerNode}
    volumes:
      ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - checkout:
        force-clean-build: true
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -e
            set -x

            BRANCH="${bamboo.planRepository.branchName}"

            echo "Build and deployment is not supported on branch ${BRANCH}, skipping"
  # Since the artifact is being published from a non-master branch, it should
  # still be available in the master branch.
  artifacts: &artifacts
    - name: chrome-mv3-beta.zip
      location: artifacts
      pattern: chrome-mv3-beta.zip
      shared: true
      required: true
    - name: chrome-mv3-release.zip
      location: artifacts
      pattern: chrome-mv3-release.zip
      shared: true
      required: true
  requirements: &requirements
    - adg-docker: 'true'
    - extension: 'true'

branches:
  create: manually
  delete: never
  link-to-jira: true

notifications:
  - recipients:
      - webhook:
          name: Build webhook
          url: http://prod.jirahub.service.eu.consul/v1/webhook/bamboo
    events:
      - plan-status-changed

labels: []
other:
  concurrent-build-plugin: system-default

# Run plan only for 'stable/test' branch.
# Override is needed to skip the build stage for other branches,
# because even if branches are not supposed to be run for PRs (due to 'create: manually' above),
# build was triggered by 'cron' anyway.
# FIXME: Uncomment in AG-44839
# branch-overrides:
#   -
    # Note: it should be equal with `bamboo.stableBranchName`
    # stable/v5.2:
    #   stages:
    #     - Tests:
    #         manual: false
    #         final: false
    #         jobs:
    #           - Lint
    #           - Unit tests
    #           - Locales check
    #     - Update filters and build:
    #         manual: false
    #         final: false
    #         jobs:
    #           - Update filters and build
    #     - Integration tests:
    #         manual: false
    #         final: false
    #         jobs:
    #           - Integration tests

    #   Lint:
    #     key: LINT
    #     other:
    #       clean-working-dir: true
    #     docker:
    #       image: ${bamboo.dockerNode}
    #       volumes:
    #         ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
    #     tasks:
    #       - checkout:
    #           force-clean-build: true
    #       - script:
    #           interpreter: SHELL
    #           scripts:
    #             - |-
    #               set -x
    #               set -e
    #               ls -la

    #               # Fix mixed logs.
    #               exec 2>&1

    #               # Set cache directory
    #               pnpm config set store-dir ${bamboo.cachePnpm}

    #               pnpm install ${bamboo.varsPnpm}

    #               ./bamboo-specs/scripts/timeout-wrapper.sh 120s pnpm lint
    #     final-tasks:
    #       - script:
    #           interpreter: SHELL
    #           scripts:
    #             - ./bamboo-specs/scripts/cleanup.sh
    #     requirements:
    #       - adg-docker: 'true'

    #   Unit tests:
    #     key: UNITTESTS
    #     other:
    #       clean-working-dir: true
    #     docker:
    #       image: ${bamboo.dockerNode}
    #       volumes:
    #         ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
    #     tasks:
    #       - checkout:
    #           force-clean-build: true
    #       - script:
    #           interpreter: SHELL
    #           scripts:
    #             - |-
    #               set -x
    #               set -e
    #               ls -la

    #               # Fix mixed logs.
    #               exec 2>&1

    #               # Set cache directory
    #               pnpm config set store-dir ${bamboo.cachePnpm}

    #               pnpm install ${bamboo.varsPnpm}

    #               ./bamboo-specs/scripts/timeout-wrapper.sh 300s pnpm test:ci
    #     final-tasks:
    #       - test-parser:
    #           type: junit
    #           # mv3 postfix because we run auto-builds only for mv3 branch.
    #           test-results: 'tests-reports/unit-tests-mv3.xml'
    #       - script:
    #           interpreter: SHELL
    #           scripts:
    #             - ./bamboo-specs/scripts/cleanup.sh
    #     requirements:
    #       - adg-docker: 'true'

    #   Locales check:
    #     key: LOCALESCHECK
    #     other:
    #       clean-working-dir: true
    #     docker:
    #       image: ${bamboo.dockerNode}
    #       volumes:
    #         ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
    #     tasks:
    #       - checkout:
    #           force-clean-build: true
    #       - script:
    #           interpreter: SHELL
    #           scripts:
    #             - |-
    #               set -x
    #               set -e
    #               ls -la

    #               # Fix mixed logs.
    #               exec 2>&1

    #               # Set cache directory
    #               pnpm config set store-dir ${bamboo.cachePnpm}

    #               pnpm install ${bamboo.varsPnpm}

    #               pnpm locales validate --min
    #     final-tasks:
    #       - script:
    #           interpreter: SHELL
    #           scripts:
    #             - ./bamboo-specs/scripts/cleanup.sh
    #     requirements:
    #       - adg-docker: 'true'


    #   Update filters and build:
    #     key: UPDATEFILTERSANDBUILD
    #     other:
    #       clean-working-dir: true
    #     docker:
    #       image: ${bamboo.dockerNode}
    #       volumes:
    #         ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
    #     tasks:
    #       - checkout:
    #           force-clean-build: true
    #       - script:
    #           interpreter: SHELL
    #           scripts:
    #             - |-
    #               set -x
    #               set -e

    #               # Fix mixed logs
    #               exec 2>&1
    #               ls -la

    #               # Validate that current branch is valid for build.
    #               if [ "${bamboo.planRepository.branchName}" != "${bamboo.stableBranchName}" ]; then
    #                   # Throw error if current branch is not ${bamboo.stableBranchName},
    #                   # because we do not deploy new releases not from stable branch.
    #                   echo "auto-build is not supported on branch ${bamboo.stableBranchName}"
    #                   exit 1;
    #               fi

    #               # Set cache directory
    #               pnpm config set store-dir ${bamboo.cachePnpm}

    #               pnpm install ${bamboo.varsPnpm}

    #               # Update patch version because resources was changed.
    #               pnpm increment

    #               # Update filters before build.
    #               # --skip-local-resources is used to skip updating local resources,
    #               # because to use "skip review" feature in the Chrome Web Store
    #               # we need to ensure that changes are made only in rulesets
    #               # json files.
    #               OPENAI_API_KEY=${bamboo.openAiExtensionBuildTokenPassword} pnpm resources:mv3 --skip-local-resources

    #               # Extract unsafe rules from the filters and save them to the
    #               # metadata for each rulesets to use "skip review" feature
    #               # in the Chrome Web Store with limitation of the number of
    #               # unsafe rules to 4900, since quota for session rules is 5000
    #               # and we need to leave some space for other rules,
    #               # e.g. general $stealth rules from Tracking Protection filter.
    #               pnpm resources:mv3:extract-unsafe-rules --limit 4900

    #               # Create artifacts directory if it doesn't exist.
    #               mkdir -p artifacts

    #               # Build release and beta versions of the extension.
    #               pnpm beta chrome-mv3
    #               pnpm release chrome-mv3

    #               # Download latest beta and release versions of the extension
    #               # from the Chrome Web Store to check that they are eligible for
    #               # "skip review" feature.
    #               pnpm tsx tools/skip-review/download-latest-extension beta
    #               pnpm tsx tools/skip-review/download-latest-extension release

    #               # Check that beta and release updates contain only safe
    #               # changes in rulesets and only in rule_resources files.
    #               pnpm tsx tools/skip-review/check-changes-for-cws ./tmp/extension-beta-latest ./build/beta/chrome-mv3
    #               pnpm tsx tools/skip-review/check-changes-for-cws ./tmp/extension-release-latest ./build/release/chrome-mv3

    #               # Move zip artifacts to the artifacts directory, because we will
    #               # publish zip versions of the extension.
    #               mv build/beta/chrome-mv3.zip artifacts/chrome-mv3-beta.zip
    #               mv build/release/chrome-mv3.zip artifacts/chrome-mv3-release.zip
    #       - inject-variables:
    #           # Doesn't matter which channel we use, because version is the same
    #           # for both channels.
    #           file: build/release/build.txt
    #           scope: RESULT
    #           namespace: inject
    #       - any-task:
    #           plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.commit
    #           configuration:
    #             selectedRepository: defaultRepository
    #             commitMessage: 'skipci: Filters update & increment patch version'
    #       - any-task:
    #           plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.tagging
    #           configuration:
    #             selectedRepository: defaultRepository
    #             tagName: autobuild-v${bamboo.inject.version}
    #     final-tasks:
    #       - script:
    #           interpreter: SHELL
    #           scripts:
    #             - ./bamboo-specs/scripts/cleanup.sh
    #     artifacts: *artifacts
    #     requirements: *requirements

    #   Integration tests:
    #     key: INTEGRATIONTESTS
    #     other:
    #       clean-working-dir: true
    #     docker:
    #       image: ${bamboo.dockerPlaywright}
    #       volumes:
    #         ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
    #     tasks:
    #       - artifact-download:
    #           artifacts:
    #             - name: chrome-mv3-release.zip
    #       - artifact-download:
    #           artifacts:
    #             - name: chrome-mv3-beta.zip
    #       - script:
    #           interpreter: SHELL
    #           scripts:
    #             - |-
    #               # Call the common script for both release and beta.
    #               ./bamboo-specs/scripts/timeout-wrapper.sh 300s bash ./bamboo-specs/scripts/integration-tests.sh release
    #               ./bamboo-specs/scripts/timeout-wrapper.sh 300s bash ./bamboo-specs/scripts/integration-tests.sh beta
    #     final-tasks:
    #       - test-parser:
    #           type: junit
    #           test-results: 'tests-reports/integration-tests-*.xml'
    #       - script:
    #           interpreter: SHELL
    #           scripts:
    #             - ./bamboo-specs/scripts/cleanup.sh
    #     requirements:
    #       - adg-docker: 'true'

    #   # run auto-build each hour after 30 minutes of the hour to collect all
    #   # changes made by filter list maintainers during the last hour update.
    #   triggers:
    #     - cron:
    #         expression: 0 30 * ? * *
    #         description: Run auto-build every hour at 30 minutes past the hour.
