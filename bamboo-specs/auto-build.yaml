---
version: 2
plan:
  project-key: ADGEXT
  key: AUTOBUILD
  name: browser extension - auto-build
variables:
  # Playwright is needed for integration tests after build.
  dockerPlaywright: adguard/playwright-runner:1.48.2--0
  # Node.js is needed for build and tests.
  dockerNode: adguard/extension-builder:18.19.0--0.1.3

stages:
  - Tests:
      manual: false
      final: false
      jobs:
        - Lint
        - Unit tests
        - Locales check
  - Update filters:
      manual: false
      final: false
      jobs:
        - Update filters
  - AutoBuild:
      manual: false
      final: false
      jobs:
        - AutoBuild
  - Integration tests:
      manual: false
      final: false
      jobs:
        - Integration tests

Lint:
  key: LINT
  other:
    clean-working-dir: true
  docker:
    image: ${bamboo.dockerNode}
    volumes:
      ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x
            set -e
            ls -la

            # Fix mixed logs.
            exec 2>&1

            # Set cache directory
            pnpm config set store-dir ${bamboo.cachePnpm}

            pnpm install ${bamboo.varsPnpm}

            pnpm lint
  final-tasks:
    - script:
        interpreter: SHELL
        scripts:
          - ./bamboo-specs/scripts/cleanup.sh
  requirements:
    - adg-docker: 'true'

Unit tests:
  key: UNITTESTS
  other:
    clean-working-dir: true
  docker:
    image: ${bamboo.dockerNode}
    volumes:
      ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x
            set -e
            ls -la

            # Fix mixed logs.
            exec 2>&1

            # Set cache directory
            pnpm config set store-dir ${bamboo.cachePnpm}

            pnpm install ${bamboo.varsPnpm}

            pnpm test
  final-tasks:
    - test-parser:
        type: junit
        test-results: 'tests-reports/unit-tests.xml'
    - script:
        interpreter: SHELL
        scripts:
          - ./bamboo-specs/scripts/cleanup.sh
  requirements:
    - adg-docker: 'true'

Locales check:
  key: LOCALESCHECK
  other:
    clean-working-dir: true
  docker:
    image: ${bamboo.dockerNode}
    volumes:
      ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x
            set -e
            ls -la

            # Fix mixed logs.
            exec 2>&1

            # Set cache directory
            pnpm config set store-dir ${bamboo.cachePnpm}

            pnpm install ${bamboo.varsPnpm}

            pnpm locales validate --min
  final-tasks:
    - script:
        interpreter: SHELL
        scripts:
          - ./bamboo-specs/scripts/cleanup.sh
  requirements:
    - adg-docker: 'true'


Update filters:
  key: UPDATEFILTERS
  other:
    clean-working-dir: true
  docker:
    image: ${bamboo.dockerNode}
    volumes:
      ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - checkout:
        force-clean-build: true
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x
            set -e

            # Fix mixed logs
            exec 2>&1
            ls -la

            # Validate that current branch is valid for build.
            ./bamboo-specs/scripts/validate_branch.sh

            # Set cache directory
            pnpm config set store-dir ${bamboo.cachePnpm}

            pnpm install ${bamboo.varsPnpm}

            # Update filters before build.
            OPENAI_API_KEY=${bamboo.openAiExtensionBuildTokenPassword} pnpm resources:mv3
    - any-task:
        plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.commit
        configuration:
          commitMessage: 'skipci: Filters update'
          selectedRepository: defaultRepository
  final-tasks:
    - script:
        interpreter: SHELL
        scripts:
          - ./bamboo-specs/scripts/cleanup.sh
  requirements:
    - adg-docker: 'true'

AutoBuild:
  key: AUTOBUILD
  other:
    clean-working-dir: true
  docker:
    image: ${bamboo.dockerNode}
    volumes:
      ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - checkout:
        force-clean-build: true
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x
            set -e

            # Fix mixed logs
            exec 2>&1

            ls -la

            # Set cache directory
            pnpm config set store-dir ${bamboo.cachePnpm}

            pnpm install ${bamboo.varsPnpm}

            # Create artifacts directory if it doesn't exist.
            mkdir -p artifacts

            # Before build we increment patch version.
            pnpm increment

            # Build release and beta versions of the extension.
            pnpm beta chrome-mv3
            pnpm release chrome-mv3

            # Move zip artifacts to the artifacts directory, because we will
            # publish zip versions of the extension.
            mv build/beta/chrome-mv3.zip artifacts/chrome-mv3-beta.zip
            mv build/release/chrome-mv3.zip artifacts/chrome-mv3-release.zip
    - any-task:
        plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.commit
        configuration:
          commitMessage: 'skipci: Automatic increment build number'
          selectedRepository: defaultRepository
    - inject-variables:
        # Doesn't matter which channel we use, because version is the same
        # for both channels.
        file: build/release/build.txt
        scope: RESULT
        namespace: inject
  final-tasks:
    - script:
        interpreter: SHELL
        scripts:
          - ./bamboo-specs/scripts/cleanup.sh
  artifacts:
    # For integration tests and publish.
    - name: chrome-mv3-beta.zip
      location: artifacts
      pattern: chrome-mv3-beta.zip
      shared: true
      required: true
    # For integration tests and publish.
    - name: chrome-mv3-release.zip
      location: artifacts
      pattern: chrome-mv3-release.zip
      shared: true
      required: true
  requirements:
    - adg-docker: 'true'

Integration tests:
  key: INTEGRATIONTESTS
  other:
    clean-working-dir: true
  docker:
    image: ${bamboo.dockerPlaywright}
    volumes:
      ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - artifact-download:
        artifacts:
          - name: chrome-mv3-release.zip
    - artifact-download:
        artifacts:
          - name: chrome-mv3-beta.zip
    - script:
        interpreter: SHELL
        scripts:
          - |-
            # Call the common script for both release and beta.
            ./bamboo-specs/scripts/integration-tests.sh release
            ./bamboo-specs/scripts/integration-tests.sh beta
  final-tasks:
    - test-parser:
        type: junit
        test-results: 'tests-reports/integration-tests-*.xml'
    - script:
        interpreter: SHELL
        scripts:
          - ./bamboo-specs/scripts/cleanup.sh
  requirements:
    - adg-docker: 'true'

# Currently empty triggers to run the build manually.
triggers: []
# run release build at 11:00 every Tuesday, Thursday
# https://confluence.atlassian.com/bamboo/constructing-a-cron-expression-in-bamboo-289277372.html
# TODO: Uncomment after first couple of test runs.
#   - cron:
#       expression: 0 0 11 ? * TUE,THU

branches:
  create: manually
  delete: never
  link-to-jira: true

notifications:
  - recipients:
      - webhook:
          name: Build webhook
          url: http://prod.jirahub.service.eu.consul/v1/webhook/bamboo
    events:
      - plan-status-changed

labels: []
other:
  concurrent-build-plugin: system-default
